apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "kubeflow-dashboard"
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: kubeflow-dashboard-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/success-codes: '302'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '120'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '60'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:{AWS_ACCOUNT_ID}:certificate/{CERTIFICATE_ARN_ID}
    external-dns.alpha.kubernetes.io/hostname: "kubeflow.{DOMAIN_NAME}"
    
spec:
  rules:
    - host: kubeflow.{DOMAIN_NAME}
      http:
        paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: istio-ingressgateway
              port:
                number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "kubeflow-minio"
  namespace: kubeflow
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: kubeflow-minio-alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '120'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '60'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:{AWS_ACCOUNT_ID}:certificate/{CERTIFICATE_ARN_ID}
    external-dns.alpha.kubernetes.io/hostname: "minio.kubeflow.{DOMAIN_NAME}"

spec:
  rules:
    - host: minio.kubeflow.{DOMAIN_NAME}
      http:
        paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: minio-service
              port:
                number: 9000